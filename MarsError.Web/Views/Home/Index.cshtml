@using IntelliTect.Coalesce.TypeDefinition
@{
    ViewData["Title"] = "My New Coalesce Application";
}

<div class="content" style="margin: 100px; margin-top: 0px">
    <style>

        .admin-container tbody {
            font-size: 1.3em;
        }

        td, .admin-container div {
            padding: 3px 10px !important;
        }

            td div a {
                display: block;
            }

        th.sortable-header {
            cursor: pointer;
        }

            th.sortable-header:hover {
                background-color: #e6e6e6
            }

        .table-view-header {
            padding: 10px 15px;
        }
    </style>
    <div class="admin-container card">
        <div class="card-body">
            <table class="table highlight-rows">
                <thead>
                    <tr>
                        <th>Entity</th>
                        <th colspan="2">Links</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var vm in ReflectionRepository.Global.ApiBackedClasses.OrderBy(f => f.Name))
                    {
                        <tr>
                            <td>@vm.DisplayName</td>
                            @if (vm.SecurityInfo.IsReadAllowed(User))
                            {
                                <td>
                                    <a asp-action="Table" asp-controller="@vm.Name" style="padding-right: 15px">Table</a>
                                </td>
                                <td>
                                    <a asp-action="Cards" asp-controller="@vm.Name" style="padding-right: 15px">Cards</a>
                                </td>
                            }
                            else
                            {
                                <td colspan="2" class="thin">unauthorized</td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="table-view obj-thing" data-bind="with: fooSearch">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3>Search Criteria</h3>
            </div>
            <div class="panel-body">
                <div class="col-md-6">
                    <div class="form-group">
                        <label class="control-label" for="fooPart">Foo Part</label>
                        <input type="text" class="form-control" id="fooPart" placeholder="cal" data-bind="textInput: dataSource.fooPart">
                    </div>
                    <div class="form-group">
                        <label class="control-label" for="fooPart">Bar Part</label>
                        <input type="text" class="form-control" id="barPart" placeholder="cal" data-bind="textInput: dataSource.barPart">
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label class="control-label" for="buttons" data-bind="text: isLoading() ? 'Searching...' : 'Search'">Search</label>
                        <div class="input-group btn-group" id="buttons" role="group">
                            <button class="btn btn-primary" data-bind="click: $parent.search, disable: isLoading()">Go!</button>
                            <button class="btn btn-warning" data-bind="click: $parent.reset">Reset</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="table-view-header">
            <div class="clearfix">
                <h1 style="display: inline-block">
                    Thing Search
                </h1>
                <h3 class="col-md-6">Search Results <small class="alert alert-info" data-bind="text: totalCount() ? totalCount() + ' total records' : 'no results', visible: totalCount()" style="display: none;"></small></h3>
            </div>
            <div class="clearfix">
                <div style="display: inline-block; font-size: 1.1em; margin-right: 10px;">
                    <i class="fa fa-arrow-circle-left" data-bind="enabled: previousPageEnabled() && !isLoading(), click: previousPage"></i>
                    Page
                    <input data-bind="value: page" style="width: 35px">
                    of
                    <span data-bind="text: pageCount"></span>
                    <i class="fa fa-arrow-circle-right" data-bind="enabled: nextPageEnabled() && !isLoading(), click: nextPage"></i>
                </div>
                <select class="form-control" style="width: 100px; display: inline-block;" data-bind="value: pageSize">
                    <option value="1">1</option>
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="50">50</option>
                    <option value="100">100</option>
                    <option value="500">500</option>
                    <option value="1000">1000</option>
                </select>
            </div>
        </div>
        <hr />
        <div class="card table-view-body">
            <div class="card-body">
                <table class="table" data-bind="visible: !isLoading() && totalCount()" style="display: none;">
                    <thead>
                        <tr>
                            <th class="sortable-header" data-bind="click: function(){orderByToggle('Foo')}">
                                Foo
                                <i class="pull-right fa" data-bind="css:{'fa-caret-up': orderBy() == 'Foo', 'fa-caret-down': orderByDescending() == 'Foo'}"></i>
                            </th>
                            <th class="sortable-header" data-bind="click: function(){orderByToggle('Bar')}">
                                Bar
                                <i class="pull-right fa" data-bind="css:{'fa-caret-up': orderBy() == 'Bar', 'fa-caret-down': orderByDescending() == 'Bar'}"></i>
                            </th>
                            <th style="width: 1%">
                            </th>
                        </tr>
                    </thead>
                    <tbody data-bind="foreach: items">
                        <tr data-bind="css: {'btn-warning': errorMessage()}, attr: {id: thingId}">

                            <td class="prop-foo">@(Knockout.DisplayFor<MarsError.Data.Models.Thing>(p => p.Foo, true))</td>
                            <td class="prop-bar">@(Knockout.DisplayFor<MarsError.Data.Models.Thing>(p => p.Bar, true))</td>
                            <td>
                                <div class="form-control-static" data-bind="text: errorMessage"></div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>

        <div class="panel-body" data-bind="visible: isLoading()" style="display: none;">
            <h3 style="width: 100%; text-align: center;">Loading...</h3>
        </div>

        <div class="panel-body" data-bind="visible: !totalCount() && !isLoading()" style="display: none;">
            <h3 style="width: 100%; text-align: center;">No Results</h3>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/home.js" asp-append-version="true"></script>
}